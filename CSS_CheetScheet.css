Button -
Background Color
color
border
height
width
border - radius
cursor

Insted of setting width and height, Padding - to add space inside
Margin - add space on the outside

Vertical-align - to allign the content in line

transition: #what is changing and event; #can add multiple features

we call the class by attribute.class{} or .class{}
we call an id by #id

.class_name:#required action hover or click{} - hover, click styles etc

Text:
font-family, style - # self explanatory
text-align - alignment
line-height - spacing
text-decoration - edit style of text
margin-left - to add space

if we assign style in basic common section, and same in class - class style will overide it

Image:
object-fit: 
object-position: ;

<link rel="stylesheet" href=""> -link css page to HTML page

class1,class2{} - apply similar features

CSS- Display Property - switch between block and inline block
display: inline-block;

imline css - can write css code in any sentences #hard to read

CSS Grid:
Helps us create perfectly aligned layouts
- style in div
- style = "dislay:grid;"
grid-template-columns: 100px 100px; # says the no. of columns a grid has and it's width
by using this div also won't takeup whole line - so display is not required
maintain allignment
have wraping property - wraps to next column - if we have more elemets
1fr- with ratio / fr - free space- takes remaining space
column-gap: gap bn all clmns

CSS Flexbox:
display: flex
flex-direction:
max-width: max wiidth of growing section
similar to grid but more flexible, aligns with the content
always maintains alignment
flex:1; similar to fr takes up remaining space
justify-content: start, center, or end - position of element, space between - equal space b/n each element and spread them
align-items: - aligns from the top end - strech covers full, start - from top
to prevent certain items from shrinking - flex-shrink: 0
width: 0 - to remove the default width of searchbox

.class_name::Placeholder{ to design a placeholder}

CSS Position:
position: static #default
position : fixed - header that always stays on top
top, left, right, bottom - space between edge and elment - if we place them in opposite direction the element streach
can also use height and width
- add space to the top of body,padding is better

border-req postion- style

position: absolute; - takes same value as position fixed but it moves
if placed inside fixed element- it'll be relative to that apart from page
z-index: - default 0

Ressponsive design - 
@media { conditional statement}

more the z index the image appears in more front

position relative - it'll move with the element if placed inside a element
can place absolute element inside it

padding: top, right, bottom, left;
same for margin
border: width, solid, color;
inheritance proerty - passon inside grid - don't work for all property
